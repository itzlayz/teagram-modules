from .. import loader, utils
from pyrogram import Client, types, enums

@loader.module('ChatInfo', author='Layz')
class ChatInfoMod(loader.Module):
    async def chat_cmd(self, app: Client, message: types.Message):
        chatId = message.chat.id

        bots = [bot.user.username async for bot in app.get_chat_members(
            chatId, 
            filter=enums.ChatMembersFilter.BOTS # type: ignore
        )]

        owners = [owner.user.username async for owner in app.get_chat_members(
            chatId, 
            filter=enums.ChatMembersFilter.ADMINISTRATORS # type: ignore
        ) if owner.user.username not in bots]

        members = [member.user.username async for member in app.get_chat_members(
            chatId # type: ignore
        ) if member.user.username not in bots]

        total = members + owners

        # —ç—Ç–æ —Ç–∞–∫ –¥–ª—è pylance, –∞ —Ç–æ –±–µ—Å–∏—Ç                   ^^^

        await utils.answer(
            message,
            f'üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ "{message.chat.title}"\n\n'
            f'–í—Å–µ–≥–æ **{len(total)}** —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n'
            'üë®‚Äç‚úàÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: ' + ', '.join(owner for owner in owners) + '\n\n'
            'üßç‚Äç‚ôÇÔ∏è –£—á–∞—Å—Ç–Ω–∏–∫–∏: ' + ', '.join(member for member in members)
        )